{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["incommingCallAudio","Audio","loop","LoadingTailSpin","type","color","Row","styled","div","App","peer","useRef","useState","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userMediaLoading","setUserMediaLoading","callingPermission","setCallingPermission","callButtonDisability","setCallButtonDisability","remoteUserId","setRemoteUserId","userVideo","partnerVideo","socket","videoStatus","setVideoStatus","audioStatus","setAudioStatus","screenShareStatus","setScreenShareStatus","cameraMode","toggleVideo","startUserMediaLoadingTimeout","toggleScreenShare","setTimeout","oldTrack","getVideoTracks","readyState","navigator","mediaDevices","getUserMedia","video","facingMode","then","newStream","newTrack","removeTrack","addTrack","current","replaceTrack","stop","oldScreenTrack","getDisplayMedia","audio","addEventListener","useEffect","io","connect","srcObject","catch","reason","toast","error","on","id","console","log","data","signal","from","name","response","status","UserVideo","CallUserList","callFaculty","PartnerVideo","endCallButton","ToggleMediaButtons","milisec","changeNameInput","Form","onSubmit","event","preventDefault","target","value","alreadyTaken","Object","keys","forEach","key","emit","Group","controlId","Label","Control","placeholder","Button","variant","size","className","playsInline","muted","ref","autoPlay","map","onClick","to","disabled","style","margin","Peer","initiator","trickle","reconnectTimer","config","iceServers","urls","userToCall","signalData","info","alert","removeListener","destroy","message","incommintCall","videobutton","audiobutton","screenSharebutton","videoIcon","audioIcon","screenShareIcon","mediaButtonDisable","getAudioTracks","play","Card","background","Header","Body","Title","Container","Col","pause","currentTime","Footer","hidden","fluid","autoClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43dfd888.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { Button, Col, Form, Container, Card } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport {\n  CameraVideo,\n  CameraVideoOff,\n  MicMute,\n  Mic,\n  ArrowBarUp,\n} from \"react-bootstrap-icons\";\nimport Loader from \"react-loader-spinner\";\n\nconst incommingCallAudio = new Audio(\"./skype_remix_2.mp3\");\nincommingCallAudio.loop = true;\n\nconst LoadingTailSpin = () => {\n  return (\n    <Loader\n      type=\"TailSpin\"\n      color=\"#00BFFF\"\n      // timeout={3000}\n    />\n  );\n};\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nfunction App() {\n  const peer = useRef(null);\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [userMediaLoading, setUserMediaLoading] = useState(false);\n\n  const [callingPermission, setCallingPermission] = useState(false);\n\n  const [callButtonDisability, setCallButtonDisability] = useState(false);\n  const [remoteUserId, setRemoteUserId] = useState(\"\");\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  const [videoStatus, setVideoStatus] = useState(true);\n  const [audioStatus, setAudioStatus] = useState(true);\n  const [screenShareStatus, setScreenShareStatus] = useState(false);\n  const [cameraMode, setCameraMode] = useState(\"user\");\n\n  useEffect(() => {\n    // 1. connect to server\n    // socket.current = io.connect(\"http://localhost:8000/\");\n    // socket.current = io.connect(\"http://192.168.29.67:8000/\");\n    // socket.current = io.connect(\"http://192.168.1.105:8000/\");\n    // socket.current = io.connect(\"https://ielts-video-chat.herokuapp.com/\");\n    socket.current = io.connect(\"\");\n    navigator.mediaDevices\n      .getUserMedia({ video: { facingMode: cameraMode }, audio: true })\n      .then((stream) => {\n        setStream(stream);\n        if (userVideo.current) {\n          userVideo.current.srcObject = stream;\n        }\n      })\n      .catch((reason) => {\n        toast.error(\"Provide Permission\");\n      });\n\n    socket.current.on(\"yourID\", (id) => {\n      setYourID(id);\n    });\n    socket.current.on(\"allUsers\", (users) => {\n      console.log(users);\n\n      setUsers(users);\n    });\n\n    socket.current.on(\"receiveSignal\", (data) => {\n      console.log(\"Reciving signal\");\n      setCallerSignal(data.signal);\n    });\n\n    socket.current.on(\"receiveCall\", (data) => {\n      console.log(\"Reciving\");\n      setReceivingCall(true);\n      setCallButtonDisability(true);\n      setCaller(data.from.name);\n      setRemoteUserId(data.from.id);\n      // setCallerSignal(data.signal);\n    });\n\n    socket.current.on(\"changeNameStatus\", (response) => {\n      if (response.status) {\n        // toast.success(\"Name changed!\");\n      } else {\n        toast.error(\"name already taken!\");\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.current.on(\"callPermissionGranted\", (data) => {\n      if (users[data.from]) {\n        console.log(\"Permission Granted from \" + users[data.from]);\n        setCallingPermission(data.from);\n      }\n    });\n  }, [users]);\n\n  function callPeer(id) {\n    setCallButtonDisability(true);\n\n    peer.current = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream,\n      reconnectTimer: true,\n      config: {\n        iceServers: [\n          // { urls: \"iphone-stun.strato-iphone.de:3478\" },\n          // { urls: \"numb.viagenie.ca:3478\" },\n          { urls: \"stun:stun.12connect.com:3478\" },\n          { urls: \"stun:stun.12voip.com:3478\" },\n          { urls: \"stun:stun.1und1.de:3478\" },\n          { urls: \"stun:stun.3cx.com:3478\" },\n          { urls: \"stun:stun.acrobits.cz:3478\" },\n          { urls: \"stun:stun.actionvoip.com:3478\" },\n          { urls: \"stun:stun.advfn.com:3478\" },\n          { urls: \"stun:stun.altar.com.pl:3478\" },\n          { urls: \"stun:stun.antisip.com:3478\" },\n          { urls: \"stun:stun.avigora.fr:3478\" },\n          { urls: \"stun:stun.bluesip.net:3478\" },\n          { urls: \"stun:stun.cablenet-as.net:3478\" },\n          { urls: \"stun:stun.callromania.ro:3478\" },\n          { urls: \"stun:stun.callwithus.com:3478\" },\n          { urls: \"stun:stun.cheapvoip.com:3478\" },\n          { urls: \"stun:stun.cloopen.com:3478\" },\n          { urls: \"stun:stun.commpeak.com:3478\" },\n          { urls: \"stun:stun.cope.es:3478\" },\n          { urls: \"stun:stun.counterpath.com:3478\" },\n          { urls: \"stun:stun.counterpath.net:3478\" },\n          { urls: \"stun:stun.dcalling.de:3478\" },\n          { urls: \"stun:stun.demos.ru:3478\" },\n          { urls: \"stun:stun.dus.net:3478\" },\n          { urls: \"stun:stun.easycall.pl:3478\" },\n          { urls: \"stun:stun.easyvoip.com:3478\" },\n          { urls: \"stun:stun.ekiga.net:3478\" },\n          { urls: \"stun:stun.epygi.com:3478\" },\n          { urls: \"stun:stun.etoilediese.fr:3478\" },\n          { urls: \"stun:stun.faktortel.com.au:3478\" },\n          { urls: \"stun:stun.freecall.com:3478\" },\n          { urls: \"stun:stun.freeswitch.org:3478\" },\n          { urls: \"stun:stun.freevoipdeal.com:3478\" },\n          { urls: \"stun:stun.gmx.de:3478\" },\n          { urls: \"stun:stun.gmx.net:3478\" },\n          { urls: \"stun:stun.halonet.pl:3478\" },\n          { urls: \"stun:stun.hoiio.com:3478\" },\n          { urls: \"stun:stun.hosteurope.de:3478\" },\n          { urls: \"stun:stun.infra.net:3478\" },\n          { urls: \"stun:stun.internetcalls.com:3478\" },\n          { urls: \"stun:stun.intervoip.com:3478\" },\n          { urls: \"stun:stun.ipfire.org:3478\" },\n          { urls: \"stun:stun.ippi.fr:3478\" },\n          { urls: \"stun:stun.ipshka.com:3478\" },\n          { urls: \"stun:stun.it1.hr:3478\" },\n          { urls: \"stun:stun.ivao.aero:3478\" },\n          { urls: \"stun:stun.jumblo.com:3478\" },\n          { urls: \"stun:stun.justvoip.com:3478\" },\n          { urls: \"stun:stun.l.google.com:19302\" },\n          { urls: \"stun:stun.linphone.org:3478\" },\n          { urls: \"stun:stun.liveo.fr:3478\" },\n          { urls: \"stun:stun.lowratevoip.com:3478\" },\n          { urls: \"stun:stun.lundimatin.fr:3478\" },\n          { urls: \"stun:stun.mit.de:3478\" },\n          { urls: \"stun:stun.miwifi.com:3478\" },\n          { urls: \"stun:stun.modulus.gr:3478\" },\n          { urls: \"stun:stun.myvoiptraffic.com:3478\" },\n          { urls: \"stun:stun.netappel.com:3478\" },\n          { urls: \"stun:stun.netgsm.com.tr:3478\" },\n          { urls: \"stun:stun.nfon.net:3478\" },\n          { urls: \"stun:stun.nonoh.net:3478\" },\n          { urls: \"stun:stun.nottingham.ac.uk:3478\" },\n          { urls: \"stun:stun.ooma.com:3478\" },\n          { urls: \"stun:stun.ozekiphone.com:3478\" },\n          { urls: \"stun:stun.pjsip.org:3478\" },\n          { urls: \"stun:stun.poivy.com:3478\" },\n          { urls: \"stun:stun.powervoip.com:3478\" },\n          { urls: \"stun:stun.ppdi.com:3478\" },\n          { urls: \"stun:stun.qq.com:3478\" },\n          { urls: \"stun:stun.rackco.com:3478\" },\n          { urls: \"stun:stun.rockenstein.de:3478\" },\n          { urls: \"stun:stun.rolmail.net:3478\" },\n          { urls: \"stun:stun.rynga.com:3478\" },\n          { urls: \"stun:stun.schlund.de:3478\" },\n          { urls: \"stun:stun.sigmavoip.com:3478\" },\n          { urls: \"stun:stun.sip.us:3478\" },\n          { urls: \"stun:stun.sipdiscount.com:3478\" },\n          { urls: \"stun:stun.sipgate.net:10000\" },\n          { urls: \"stun:stun.sipgate.net:3478\" },\n          { urls: \"stun:stun.siplogin.de:3478\" },\n          { urls: \"stun:stun.sipnet.net:3478\" },\n          { urls: \"stun:stun.sipnet.ru:3478\" },\n          { urls: \"stun:stun.sippeer.dk:3478\" },\n          { urls: \"stun:stun.siptraffic.com:3478\" },\n          { urls: \"stun:stun.sma.de:3478\" },\n          { urls: \"stun:stun.smartvoip.com:3478\" },\n          { urls: \"stun:stun.smsdiscount.com:3478\" },\n          { urls: \"stun:stun.solcon.nl:3478\" },\n          { urls: \"stun:stun.solnet.ch:3478\" },\n          { urls: \"stun:stun.sonetel.com:3478\" },\n          { urls: \"stun:stun.sonetel.net:3478\" },\n          { urls: \"stun:stun.sovtest.ru:3478\" },\n          { urls: \"stun:stun.srce.hr:3478\" },\n          { urls: \"stun:stun.stunprotocol.org:3478\" },\n          { urls: \"stun:stun.t-online.de:3478\" },\n          { urls: \"stun:stun.tel.lu:3478\" },\n          { urls: \"stun:stun.telbo.com:3478\" },\n          { urls: \"stun:stun.tng.de:3478\" },\n          { urls: \"stun:stun.twt.it:3478\" },\n          { urls: \"stun:stun.uls.co.za:3478\" },\n          { urls: \"stun:stun.unseen.is:3478\" },\n          { urls: \"stun:stun.usfamily.net:3478\" },\n          { urls: \"stun:stun.viva.gr:3478\" },\n          { urls: \"stun:stun.vivox.com:3478\" },\n          { urls: \"stun:stun.vo.lu:3478\" },\n          { urls: \"stun:stun.voicetrading.com:3478\" },\n          { urls: \"stun:stun.voip.aebc.com:3478\" },\n          { urls: \"stun:stun.voip.blackberry.com:3478\" },\n          { urls: \"stun:stun.voip.eutelia.it:3478\" },\n          { urls: \"stun:stun.voipblast.com:3478\" },\n          { urls: \"stun:stun.voipbuster.com:3478\" },\n          { urls: \"stun:stun.voipbusterpro.com:3478\" },\n          { urls: \"stun:stun.voipcheap.co.uk:3478\" },\n          { urls: \"stun:stun.voipcheap.com:3478\" },\n          { urls: \"stun:stun.voipgain.com:3478\" },\n          { urls: \"stun:stun.voipgate.com:3478\" },\n          { urls: \"stun:stun.voipinfocenter.com:3478\" },\n          { urls: \"stun:stun.voipplanet.nl:3478\" },\n          { urls: \"stun:stun.voippro.com:3478\" },\n          { urls: \"stun:stun.voipraider.com:3478\" },\n          { urls: \"stun:stun.voipstunt.com:3478\" },\n          { urls: \"stun:stun.voipwise.com:3478\" },\n          { urls: \"stun:stun.voipzoom.com:3478\" },\n          { urls: \"stun:stun.voys.nl:3478\" },\n          { urls: \"stun:stun.voztele.com:3478\" },\n          { urls: \"stun:stun.webcalldirect.com:3478\" },\n          { urls: \"stun:stun.wifirst.net:3478\" },\n          { urls: \"stun:stun.xtratelecom.es:3478\" },\n          { urls: \"stun:stun.zadarma.com:3478\" },\n          { urls: \"stun:stun1.faktortel.com.au:3478\" },\n          { urls: \"stun:stun1.l.google.com:19302\" },\n          { urls: \"stun:stun2.l.google.com:19302\" },\n          { urls: \"stun:stun3.l.google.com:19302\" },\n          { urls: \"stun:stun4.l.google.com:19302\" },\n          { urls: \"stun:stun.nextcloud.com:443\" },\n          { urls: \"stun:relay.webwormhole.io:3478\" },\n        ],\n      },\n    });\n\n    console.log(\"Call user\");\n    peer.current.on(\"signal\", (data) => {\n      socket.current.emit(\"callerSignal\", {\n        userToCall: id,\n        signalData: data,\n        from: yourID,\n      });\n    });\n    socket.current.emit(\"callUser\", { userToCall: id, from: yourID });\n\n    peer.current.on(\"stream\", (stream) => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    peer.current.on(\"connect\", () => {\n      toast.info(\"Connected\");\n    });\n\n    socket.current.on(\"callAccepted\", (signal) => {\n      setCallAccepted(true);\n      setRemoteUserId(id);\n      peer.current.signal(signal);\n      setCallButtonDisability(true);\n      console.log(\"accepted\");\n      setCallingPermission(false);\n    });\n\n    peer.current.on(\"error\", (error) => {\n      console.log(error);\n      if (error !== \"Call ended\") {\n        alert(\"Connection error or client closed webpage!\");\n      }\n      setRemoteUserId(\"\");\n      setCallAccepted(false);\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"callAccepted\");\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    });\n\n    socket.current.on(\"callEnded\", () => {\n      // peer.current.destroy(\"Call ended\");\n      setRemoteUserId(\"\");\n      setCallAccepted(false);\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"callAccepted\");\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    });\n\n    socket.current.on(\"error\", (error) => {\n      peer.current.destroy(error.message);\n    });\n  }\n\n  function acceptCall() {\n    incommingCallAudio.pause();\n    incommingCallAudio.currentTime = 0;\n    setCallAccepted(true);\n    setReceivingCall(false);\n    setCallButtonDisability(true);\n    // setCaller(false);\n\n    peer.current = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n      reconnectTimer: true,\n    });\n\n    peer.current.on(\"signal\", (data) => {\n      socket.current.emit(\"acceptCall\", { signal: data, to: remoteUserId });\n    });\n\n    peer.current.on(\"stream\", (stream) => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    peer.current.signal(callerSignal);\n\n    peer.current.on(\"connect\", () => {\n      toast.info(\"Connected\");\n    });\n\n    peer.current.on(\"error\", (error) => {\n      console.log(error);\n      if (error !== \"Call ended\") {\n        alert(\"Connection error or client closed webpage!\");\n      }\n      setCallAccepted(false);\n      setCaller(\"\");\n      setRemoteUserId(\"\");\n      setCallerSignal();\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    });\n\n    socket.current.on(\"callEnded\", () => {\n      // peer.current.destroy(\"Call ended\");\n      setCallAccepted(false);\n      setCaller(\"\");\n      setRemoteUserId(\"\");\n      setCallerSignal();\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    });\n  }\n\n  function endCall(key) {\n    socket.current.emit(\"endCall\", { id: remoteUserId });\n    peer.current.destroy(\"Call ended\");\n  }\n\n  function giveCallPermission(id) {\n    socket.current.emit(\"giveCallPermission\", { from: yourID, to: id });\n  }\n\n  function toggleVideo() {\n    startUserMediaLoadingTimeout(1000);\n\n    if (screenShareStatus) {\n      toggleScreenShare();\n    }\n\n    setTimeout(() => {\n      const oldTrack = stream.getVideoTracks()[0];\n\n      if (oldTrack.readyState === \"ended\") {\n        navigator.mediaDevices\n          .getUserMedia({ video: { facingMode: cameraMode } })\n          .then((newStream) => {\n            const newTrack = newStream.getVideoTracks()[0];\n            stream.removeTrack(oldTrack);\n            stream.addTrack(newTrack);\n            setVideoStatus(true);\n            if (callAccepted) {\n              peer.current.replaceTrack(oldTrack, newTrack, stream);\n            }\n          });\n      } else if (oldTrack.readyState === \"live\") {\n        oldTrack.stop();\n        setVideoStatus(false);\n\n        if (callAccepted) {\n          peer.current.replaceTrack(oldTrack, oldTrack, stream);\n        }\n      }\n    }, 500);\n  }\n\n  function toggleScreenShare() {\n    startUserMediaLoadingTimeout(1000);\n\n    if (videoStatus) {\n      toggleVideo();\n    }\n\n    setTimeout(() => {\n      const oldScreenTrack = stream.getVideoTracks()[0];\n\n      if (oldScreenTrack.readyState === \"ended\") {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true, audio: true })\n          .then((newStream) => {\n            const newTrack = newStream.getVideoTracks()[0];\n            stream.removeTrack(oldScreenTrack);\n            stream.addTrack(newTrack);\n            setScreenShareStatus(true);\n            if (callAccepted) {\n              peer.current.replaceTrack(oldScreenTrack, newTrack, stream);\n            }\n            stream.getVideoTracks()[0].addEventListener(\"ended\", () => {\n              setScreenShareStatus(false);\n            });\n          });\n      } else if (oldScreenTrack.readyState === \"live\") {\n        oldScreenTrack.stop();\n        setScreenShareStatus(false);\n\n        if (callAccepted) {\n          peer.current.replaceTrack(oldScreenTrack, oldScreenTrack, stream);\n        }\n      }\n    }, 500);\n  }\n\n  function toggleAudio() {\n    startUserMediaLoadingTimeout(400);\n\n    const oldTrack = stream.getAudioTracks()[0];\n\n    if (oldTrack.readyState === \"ended\") {\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((newStream) => {\n        const newTrack = newStream.getAudioTracks()[0];\n        stream.removeTrack(oldTrack);\n        stream.addTrack(newTrack);\n        setAudioStatus(true);\n        if (callAccepted) {\n          peer.current.replaceTrack(oldTrack, newTrack, stream);\n        }\n      });\n    } else if (oldTrack.readyState === \"live\") {\n      oldTrack.stop();\n      setAudioStatus(false);\n\n      if (callAccepted) {\n        peer.current.replaceTrack(oldTrack, oldTrack, stream);\n      }\n    }\n  }\n\n  // function toggleCamera() {\n  //   startUserMediaLoadingTimeout(1700);\n  //   const newCameraMode = cameraMode === 'user' ? 'environment' : 'user';\n  //   const oldTrack = stream.getVideoTracks()[0];\n  //   oldTrack.stop()\n  //   navigator.mediaDevices.getUserMedia({ video: { facingMode: cameraMode } }).then(newStream => {\n  //     const newTrack = newStream.getVideoTracks()[0]\n  //     stream.removeTrack(oldTrack)\n  //     stream.addTrack(newTrack)\n  //     setVideoStatus(true);\n  //     if (callAccepted) {\n  //       peer.current.replaceTrack(oldTrack, newTrack, stream);\n  //     }\n  //   })\n  //   setCameraMode(newCameraMode)\n  // }\n\n  const startUserMediaLoadingTimeout = (milisec) => {\n    setUserMediaLoading(true);\n    setTimeout(() => {\n      setUserMediaLoading(false);\n    }, milisec);\n  };\n\n  function changeName(event) {\n    event.preventDefault();\n    const name = event.target.name.value;\n    let alreadyTaken = false;\n    Object.keys(users).forEach((key) => {\n      if (key !== yourID) {\n        if (name === users[key]) {\n          alreadyTaken = true;\n        }\n      }\n    });\n    if (alreadyTaken) {\n      toast.error(\"name already taken!\");\n      return;\n    } else {\n      socket.current.emit(\"changeName\", { name });\n    }\n  }\n\n  const changeNameInput = (\n    <Form onSubmit={changeName}>\n      <Form.Group controlId=\"name\">\n        <Form.Label>Change Display name</Form.Label>\n\n        <Form.Control type=\"text\" placeholder=\"Enter name\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" size=\"sm\">\n        <small>Change Name</small>\n      </Button>\n    </Form>\n  );\n\n  let UserVideo;\n  let CallUserList;\n  let callFaculty;\n  if (stream) {\n    UserVideo = (\n      <video className=\"userVideo\" playsInline muted ref={userVideo} autoPlay />\n    );\n    // if (users[yourID] === \"professor\") {\n    CallUserList = Object.keys(users).map((key) => {\n      if (key === yourID) {\n        return null;\n      }\n      return (\n        <>\n          {/* <Button\n            variant=\"primary\"\n            onClick={() => callPeer(key)}\n            disabled={callButtonDisability}\n            style={{ margin: 5 }}\n          >\n            Call {users[key]}\n          </Button> */}\n          <Button\n            variant=\"success\"\n            onClick={() => giveCallPermission(key)}\n            disabled={callButtonDisability}\n            style={{ margin: 5 }}\n          >\n            give Permission to {users[key]}\n          </Button>\n        </>\n      );\n    });\n    // } else\n    if (callingPermission) {\n      callFaculty = (\n        <Button\n          variant=\"primary\"\n          onClick={() => callPeer(callingPermission)}\n          disabled={callButtonDisability}\n          style={{ margin: 5 }}\n        >\n          Call {users[callingPermission]}\n        </Button>\n      );\n    }\n  }\n\n  let PartnerVideo;\n  let endCallButton;\n\n  if (callAccepted) {\n    PartnerVideo = (\n      <video className=\"partnerVideo\" playsInline ref={partnerVideo} autoPlay />\n    );\n    endCallButton = (\n      <div className=\"endCallButton\">\n        <Button variant=\"danger\" onClick={() => endCall()}>\n          End Call\n        </Button>\n      </div>\n    );\n  }\n\n  let ToggleMediaButtons;\n  const videobutton = videoStatus ? \"success\" : \"danger\";\n  const audiobutton = audioStatus ? \"success\" : \"danger\";\n  const screenSharebutton = screenShareStatus ? \"success\" : \"danger\";\n  const videoIcon = videoStatus ? (\n    <CameraVideo size={20} />\n  ) : (\n    <CameraVideoOff size={20} />\n  );\n  const audioIcon = audioStatus ? <Mic size={20} /> : <MicMute size={20} />;\n  const screenShareIcon = <ArrowBarUp size={20} />;\n  const mediaButtonDisable = !callAccepted;\n  ToggleMediaButtons = (\n    <Row className=\"justify-content-md-center\">\n      <Button\n        variant={videobutton}\n        onClick={toggleVideo}\n        style={{ margin: 5 }}\n        disabled={mediaButtonDisable}\n      >\n        {\" \"}\n        {videoIcon}{\" \"}\n      </Button>\n      <Button\n        variant={audiobutton}\n        onClick={toggleAudio}\n        style={{ margin: 5 }}\n        disabled={mediaButtonDisable}\n      >\n        {\" \"}\n        {audioIcon}{\" \"}\n      </Button>\n      <Button\n        variant={screenSharebutton}\n        onClick={toggleScreenShare}\n        style={{ margin: 5 }}\n        disabled={mediaButtonDisable}\n      >\n        {\" \"}\n        {screenShareIcon}{\" \"}\n      </Button>\n      {/* {videoStatus &&\n        <Button onClick={toggleCamera} style={{ margin: 5 }} disabled={mediaButtonDisable}> <ArrowRepeat /> </Button>\n      } */}\n    </Row>\n  );\n\n  let professorOnline;\n  if (users[yourID] !== \"professor\") {\n    Object.keys(users).forEach((key) => {\n      if (key !== yourID) {\n        if (users[key] === \"professor\") {\n          professorOnline = \"Professor online\";\n        }\n      }\n    });\n  }\n\n  let incommintCall;\n  if (receivingCall && users[remoteUserId] && callerSignal) {\n    incommingCallAudio.play();\n\n    incommintCall = (\n      <div className=\"incommingCall\">\n        <Card\n          className=\"text-center\"\n          style={{ background: \"black\", color: \"white\" }}\n        >\n          <Card.Header>\n            <h2>{caller} is calling you</h2>\n          </Card.Header>\n          <Card.Body>\n            <Card.Title></Card.Title>\n            <Container>\n              <Row>\n                <Col>\n                  <Button size=\"lg\" variant=\"danger\" onClick={() => {}}>\n                    Reject\n                  </Button>\n                </Col>\n                <Col>\n                  <Button size=\"lg\" variant=\"success\" onClick={acceptCall}>\n                    Accept\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\"></Card.Footer>\n        </Card>\n      </div>\n    );\n  } else {\n    incommingCallAudio.pause();\n    incommingCallAudio.currentTime = 0;\n  }\n\n  return (\n    <>\n      {/* ABSOLUTE POSITIONED components  */}\n      {incommintCall}\n      {PartnerVideo}\n      <div className=\"userElements\">\n        {UserVideo}\n        {ToggleMediaButtons}\n      </div>\n      <div className=\"userElementsLoadingBox\" hidden={!userMediaLoading}>\n        <div className=\"userElementsLoading\">\n          <LoadingTailSpin />\n        </div>\n      </div>\n\n      {endCallButton}\n\n      {/* DEFAULT POSITIONED components  */}\n      <Container style={{ color: \"white\" }} fluid>\n        <Row>\n          {CallUserList} {callFaculty}\n        </Row>\n        <Row>\n          <Col>\n            <h4>You: {users[yourID]}</h4>\n            {changeNameInput}\n            {/* <Row style={{ color: \"green\", fontWeight: \"bold\" }}>\n              {professorOnline}\n            </Row> */}\n          </Col>\n        </Row>\n        <ToastContainer autoClose={2000} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["incommingCallAudio","Audio","loop","LoadingTailSpin","type","color","Row","styled","div","App","peer","useRef","useState","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userMediaLoading","setUserMediaLoading","callButtonDisability","setCallButtonDisability","remoteUserId","setRemoteUserId","userVideo","partnerVideo","socket","videoStatus","setVideoStatus","audioStatus","setAudioStatus","cameraMode","setCameraMode","useEffect","current","io","connect","navigator","mediaDevices","getUserMedia","video","facingMode","audio","then","srcObject","catch","reason","toast","error","on","id","console","log","data","signal","from","name","response","status","UserVideo","CallUserList","PartnerVideo","endCallButton","ToggleMediaButtons","startUserMediaLoadingTimeout","milisec","setTimeout","changeNameInput","Form","onSubmit","event","preventDefault","target","value","alreadyTaken","Object","keys","forEach","key","emit","Group","controlId","Label","Control","placeholder","Button","variant","size","className","playsInline","muted","ref","autoPlay","map","onClick","Peer","initiator","trickle","userToCall","signalData","alert","removeListener","destroy","message","disabled","style","margin","professorOnline","incommintCall","videobutton","audiobutton","videoIcon","audioIcon","mediaButtonDisable","oldTrack","getVideoTracks","readyState","newStream","newTrack","removeTrack","addTrack","replaceTrack","stop","getAudioTracks","newCameraMode","play","Card","background","Header","Body","Title","Container","Col","pause","currentTime","to","Footer","hidden","fluid","fontWeight","autoClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.815a7a97.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { Button, Col, Form, Container, Card } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CameraVideo, CameraVideoOff, MicMute, Mic, ArrowRepeat } from 'react-bootstrap-icons';\nimport Loader from 'react-loader-spinner'\n\nconst incommingCallAudio = new Audio('./skype_remix_2.mp3')\nincommingCallAudio.loop = true\n\nconst LoadingTailSpin = () => {\n  return (\n    <Loader\n      type=\"TailSpin\"\n      color=\"#00BFFF\"\n    // timeout={3000}\n    />\n  )\n}\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nfunction App() {\n  const peer = useRef(null)\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [userMediaLoading, setUserMediaLoading] = useState(false);\n\n  const [callButtonDisability, setCallButtonDisability] = useState(false);\n  const [remoteUserId, setRemoteUserId] = useState(\"\");\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  const [videoStatus, setVideoStatus] = useState(true);\n  const [audioStatus, setAudioStatus] = useState(true);\n  const [cameraMode, setCameraMode] = useState('user')\n\n  useEffect(() => {\n    // 1. connect to server\n    // socket.current = io.connect(\"http://localhost:8000/\");\n    // socket.current = io.connect(\"http://192.168.29.67:8000/\");\n    // socket.current = io.connect(\"http://192.168.1.105:8000/\");\n    // socket.current = io.connect(\"https://ielts-video-chat.herokuapp.com/\");\n    socket.current = io.connect(\"\");\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: cameraMode }, audio: true }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    }).catch((reason) => {\n      toast.error(\"Provide Permission\")\n    })\n\n    socket.current.on(\"yourID\", (id) => {\n      setYourID(id);\n    })\n    socket.current.on(\"allUsers\", (users) => {\n      console.log(users);\n\n      setUsers(users);\n    })\n\n    socket.current.on(\"receiveSignal\", (data) => {\n      console.log(\"Reciving signal\");\n      setCallerSignal(data.signal);\n    })\n    \n    socket.current.on(\"receiveCall\", (data) => {\n      console.log(\"Reciving\");\n      setReceivingCall(true);\n      setCallButtonDisability(true);\n      setCaller(data.from.name);\n      setRemoteUserId(data.from.id);\n      // setCallerSignal(data.signal);\n    })\n\n\n    socket.current.on(\"changeNameStatus\", (response) => {\n      if (response.status) {\n        // toast.success(\"Name changed!\");\n      } else {\n        toast.error(\"name already taken!\")\n      }\n    });\n  }, []);\n\n  function callPeer(id) {\n\n    setCallButtonDisability(true);\n\n    peer.current = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream,\n    });\n\n    console.log(\"Call user\")\n    peer.current.on(\"signal\", data => {\n      socket.current.emit(\"callerSignal\", { userToCall: id, signalData: data, from: yourID });\n    });\n    socket.current.emit(\"callUser\", { userToCall: id, from: yourID });\n\n    peer.current.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    peer.current.on('connect', () => {\n      toast.error(\"Connected\")\n    })\n\n    socket.current.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      setRemoteUserId(id);\n      peer.current.signal(signal);\n      setCallButtonDisability(true);\n      console.log(\"accepted\");\n    });\n\n\n    peer.current.on(\"error\", (error) => {\n      console.log(error);\n      if (error !== \"Call ended\") {\n        alert(\"Connection error or client closed webpage!\")\n      }\n      setRemoteUserId(\"\");\n      setCallAccepted(false);\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"callAccepted\");\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    })\n\n\n    socket.current.on(\"callEnded\", () => {\n      peer.current.destroy(\"Call ended\");\n    })\n\n    socket.current.on(\"error\", (error) => {\n      peer.current.destroy(error.message);\n    })\n\n  }\n\n\n\n  function acceptCall() {\n    incommingCallAudio.pause()\n    incommingCallAudio.currentTime = 0;\n    setCallAccepted(true);\n    setReceivingCall(false);\n    setCallButtonDisability(true);\n    // setCaller(false);\n\n    peer.current = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n\n    peer.current.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", { signal: data, to: remoteUserId });\n    });\n\n    peer.current.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    peer.current.signal(callerSignal);\n\n\n    peer.current.on(\"error\", (error) => {\n      console.log(error);\n      if (error !== \"Call ended\") {\n        alert(\"Connection error or client closed webpage!\")\n      }\n      setCallAccepted(false);\n      setCaller(\"\");\n      setRemoteUserId(\"\");\n      setCallerSignal();\n      setCallButtonDisability(false);\n\n      socket.current.removeListener(\"videoStatusChange\");\n      socket.current.removeListener(\"audioStatusChange\");\n    });\n\n\n    socket.current.on(\"callEnded\", () => {\n      peer.current.destroy(\"Call ended\");\n    })\n\n\n  }\n\n  function toggleVideo() {\n    startUserMediaLoadingTimeout(400);\n    const oldTrack = stream.getVideoTracks()[0];\n\n    if (oldTrack.readyState === \"ended\") {\n\n      navigator.mediaDevices.getUserMedia({ video: { facingMode: cameraMode } }).then(newStream => {\n        const newTrack = newStream.getVideoTracks()[0]\n        stream.removeTrack(oldTrack)\n        stream.addTrack(newTrack)\n        setVideoStatus(true);\n        if (callAccepted) {\n          peer.current.replaceTrack(oldTrack, newTrack, stream);\n        }\n      })\n    }\n    else if (oldTrack.readyState === \"live\") {\n\n      oldTrack.stop();\n      setVideoStatus(false);\n\n      if (callAccepted) {\n        peer.current.replaceTrack(oldTrack, oldTrack, stream);\n      }\n    }\n\n  }\n\n  function toggleAudio() {\n    startUserMediaLoadingTimeout(400);\n\n    const oldTrack = stream.getAudioTracks()[0];\n\n    if (oldTrack.readyState === \"ended\") {\n\n      navigator.mediaDevices.getUserMedia({ audio: true }).then(newStream => {\n        const newTrack = newStream.getAudioTracks()[0]\n        stream.removeTrack(oldTrack)\n        stream.addTrack(newTrack)\n        setAudioStatus(true);\n        if (callAccepted) {\n          peer.current.replaceTrack(oldTrack, newTrack, stream);\n        }\n      })\n    }\n    else if (oldTrack.readyState === \"live\") {\n\n      oldTrack.stop();\n      setAudioStatus(false);\n\n      if (callAccepted) {\n        peer.current.replaceTrack(oldTrack, oldTrack, stream);\n      }\n    }\n\n  }\n\n  function toggleCamera() {\n    startUserMediaLoadingTimeout(1700);\n    const newCameraMode = cameraMode === 'user' ? 'environment' : 'user';\n    const oldTrack = stream.getVideoTracks()[0];\n    oldTrack.stop()\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: cameraMode } }).then(newStream => {\n      const newTrack = newStream.getVideoTracks()[0]\n      stream.removeTrack(oldTrack)\n      stream.addTrack(newTrack)\n      setVideoStatus(true);\n      if (callAccepted) {\n        peer.current.replaceTrack(oldTrack, newTrack, stream);\n      }\n    })\n    setCameraMode(newCameraMode)\n  }\n\n  const startUserMediaLoadingTimeout = (milisec) => {\n    setUserMediaLoading(true);\n    setTimeout(() => {\n      setUserMediaLoading(false);\n    }, milisec);\n  }\n\n  function endCall(key) {\n    socket.current.emit(\"endCall\", { id: remoteUserId })\n  }\n\n  function changeName(event) {\n    event.preventDefault();\n    const name = event.target.name.value;\n    let alreadyTaken = false;\n    Object.keys(users).forEach(key => {\n      if (key !== yourID) {\n        if (name === users[key]) {\n          alreadyTaken = true;\n        }\n      }\n    })\n    if (alreadyTaken) {\n      toast.error(\"name already taken!\"); return;\n    } else {\n      socket.current.emit(\"changeName\", { name })\n    }\n\n  }\n\n  const changeNameInput = (\n    <Form onSubmit={changeName}>\n      <Form.Group controlId=\"name\" >\n        <Form.Label>Change Display name</Form.Label>\n\n        <Form.Control type=\"text\" placeholder=\"Enter name\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" size=\"sm\">\n        <small>Change Name</small>\n      </Button>\n\n    </Form>\n  );\n\n\n  let UserVideo;\n  let CallUserList;\n  if (stream) {\n    UserVideo = (\n      <video className=\"userVideo\" playsInline muted ref={userVideo} autoPlay />\n    );\n    if (users[yourID] === \"professor\") {\n      CallUserList = Object.keys(users).map(key => {\n        if (key === yourID) {\n          return null;\n        }\n        return (\n          <Button variant=\"primary\" onClick={() => callPeer(key)} disabled={callButtonDisability} style={{ margin: 5 }} >Call {users[key]}</Button>\n        );\n      })\n    }\n  }\n\n  let PartnerVideo;\n  let endCallButton;\n\n  if (callAccepted) {\n    PartnerVideo = <video className=\"partnerVideo\" playsInline ref={partnerVideo} autoPlay />\n    endCallButton = (\n      <div className=\"endCallButton\">\n        <Button variant=\"danger\" onClick={() => endCall()} >End Call</Button>\n      </div>\n    );\n\n  }\n\n  let ToggleMediaButtons;\n  const videobutton = videoStatus ? \"success\" : \"danger\";\n  const audiobutton = audioStatus ? \"success\" : \"danger\";\n  const videoIcon = videoStatus ? <CameraVideo size={20} /> : <CameraVideoOff size={20} />;\n  const audioIcon = audioStatus ? <Mic size={20} /> : <MicMute size={20} />;\n  const mediaButtonDisable = !callAccepted;\n  ToggleMediaButtons = (\n    <Row className=\"justify-content-md-center\">\n      <Button variant={videobutton} onClick={toggleVideo} style={{ margin: 5 }} disabled={mediaButtonDisable}> {videoIcon} </Button>\n      <Button variant={audiobutton} onClick={toggleAudio} style={{ margin: 5 }} disabled={mediaButtonDisable}> {audioIcon} </Button>\n      {videoStatus &&\n        <Button onClick={toggleCamera} style={{ margin: 5 }} disabled={mediaButtonDisable}> <ArrowRepeat /> </Button>\n      }\n    </Row>\n  )\n\n\n  let professorOnline;\n  if (users[yourID] !== \"professor\") {\n    Object.keys(users).forEach(key => {\n      if (key !== yourID) {\n        if (users[key] === \"professor\") {\n          professorOnline = \"Professor online\";\n        }\n      }\n    })\n  }\n\n  let incommintCall;\n  if (receivingCall && users[remoteUserId] && callerSignal) {\n    incommingCallAudio.play()\n\n    incommintCall = (\n      <div className=\"incommingCall\">\n\n        <Card className=\"text-center\" style={{ background: \"black\", color: \"white\" }}>\n          <Card.Header><h2>{caller} is calling you</h2></Card.Header>\n          <Card.Body>\n            <Card.Title></Card.Title>\n            <Container>\n              <Row>\n                <Col><Button size=\"lg\" variant=\"danger\" onClick={() => { }}>Reject</Button></Col>\n                <Col><Button size=\"lg\" variant=\"success\" onClick={acceptCall}>Accept</Button></Col>\n              </Row>\n            </Container>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\"></Card.Footer>\n        </Card>\n\n      </div>\n    )\n  } else {\n    incommingCallAudio.pause()\n    incommingCallAudio.currentTime = 0;\n  }\n\n\n  return (\n    <>\n      {/* ABSOLUTE POSITIONED components  */}\n      {incommintCall}\n      {PartnerVideo}\n      <div className=\"userElements\">\n        {UserVideo}\n        {ToggleMediaButtons}\n      </div>\n      <div className=\"userElementsLoadingBox\" hidden={!userMediaLoading}>\n        <div className=\"userElementsLoading\">\n          <LoadingTailSpin />\n        </div>\n      </div>\n\n      {endCallButton}\n\n      {/* DEFAULT POSITIONED components  */}\n      <Container style={{ color: \"white\" }} fluid>\n        <Row>\n          {CallUserList}\n        </Row>\n        <Row>\n          <Col>\n            <h4>You: {users[yourID]}</h4>\n            {changeNameInput}\n            <Row style={{ color: \"green\", fontWeight: \"bold\" }}>\n              {professorOnline}\n            </Row>\n          </Col>\n\n        </Row>\n        <ToastContainer autoClose={2000} />\n      </Container>\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}